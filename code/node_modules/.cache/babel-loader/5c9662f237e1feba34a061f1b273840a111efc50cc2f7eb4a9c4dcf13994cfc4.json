{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibate\\\\Documents\\\\oss project\\\\open-swag-software\\\\code\\\\src\\\\pages\\\\CoachChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatBot.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoachChatBot = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // Fonction pour envoyer le message et interagir avec l'API Flask\n  const handleSendMessage = async () => {\n    if (input.trim()) {\n      // Ajouter le message de l'utilisateur à la liste des messages\n      setMessages([...messages, {\n        text: input,\n        user: true\n      }]);\n      setInput('');\n\n      // Envoyer une requête POST à l'API Flask\n      try {\n        const response = await fetch('http://127.0.0.1:5000/generate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            role: 'assistant personnel',\n            // Remplacez par le rôle approprié\n            prompt: input\n          })\n        });\n        const data = await response.json();\n\n        // Ajouter la réponse du bot à la liste des messages\n        if (data.response) {\n          setMessages(prevMessages => [...prevMessages, {\n            text: data.response,\n            user: false\n          }]);\n        } else if (data.error) {\n          setMessages(prevMessages => [...prevMessages, {\n            text: 'Error: ' + data.error,\n            user: false\n          }]);\n        }\n      } catch (error) {\n        // Gérer les erreurs de connexion\n        setMessages(prevMessages => [...prevMessages, {\n          text: 'Error: Unable to connect to the server.',\n          user: false\n        }]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      className: \"back-button\",\n      children: \"Back to Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"chatbot-title\",\n      children: \"CoachChatBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-display\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.user ? 'user-message' : 'bot-message'}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CoachChatBot, \"jF9z1sWk6zhGYqAo4bw0v45le3Y=\", false, function () {\n  return [useNavigate];\n});\n_c = CoachChatBot;\nexport default CoachChatBot;\nvar _c;\n$RefreshReg$(_c, \"CoachChatBot\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CoachChatBot","_s","navigate","messages","setMessages","input","setInput","handleSendMessage","trim","text","user","response","fetch","method","headers","body","JSON","stringify","role","prompt","data","json","prevMessages","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ibate/Documents/oss project/open-swag-software/code/src/pages/CoachChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatBot.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CoachChatBot = () => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  // Fonction pour envoyer le message et interagir avec l'API Flask\r\n  const handleSendMessage = async () => {\r\n    if (input.trim()) {\r\n      // Ajouter le message de l'utilisateur à la liste des messages\r\n      setMessages([...messages, { text: input, user: true }]);\r\n      setInput('');\r\n\r\n      // Envoyer une requête POST à l'API Flask\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/generate', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            role: 'assistant personnel', // Remplacez par le rôle approprié\r\n            prompt: input,\r\n          }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        // Ajouter la réponse du bot à la liste des messages\r\n        if (data.response) {\r\n          setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { text: data.response, user: false },\r\n          ]);\r\n        } else if (data.error) {\r\n          setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { text: 'Error: ' + data.error, user: false },\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        // Gérer les erreurs de connexion\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { text: 'Error: Unable to connect to the server.', user: false },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-wrapper\">\r\n      <button onClick={() => navigate('/')} className=\"back-button\">\r\n        Back to Homepage\r\n      </button>\r\n      <h1 className=\"chatbot-title\">CoachChatBot</h1>\r\n      <div className=\"chat-display\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chat-message ${msg.user ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          className=\"chat-input\"\r\n        />\r\n        <button onClick={handleSendMessage} className=\"send-button\">\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoachChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}